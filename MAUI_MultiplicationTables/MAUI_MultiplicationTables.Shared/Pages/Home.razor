@page "/"
@code {
    public class Calculation
    {
        public int Number;
        public int Multiplier;
        public int Result;
    }
    private int Time { get; set; }
    private List<int> Numbers { get; set; }
    private int Number = 5;

    private void Calculate()
    {
        var timer = System.Diagnostics.Stopwatch.StartNew();
        var calculations = new List<Calculation>();
        for (int i = 0; i < 1_000_000; i++)
        {
            calculations.Add(new Calculation
                {
                    Number = Number,
                    Multiplier = i,
                    Result = Number * i
                });
        }
        timer.Stop();
        Time = (int)timer.ElapsedMilliseconds;
    }

    public void GenerateAndSortNumbers()
    {
        var timer = System.Diagnostics.Stopwatch.StartNew();
        GenerateListOfRandomNumbers();
        SortListOfNumbers();
        timer.Stop();
        Time = (int)timer.ElapsedMilliseconds;
    }

    private void GenerateListOfRandomNumbers()
    {
        var random = new Random();
        var numbers = new List<int>();
        for (int i = 0; i < 1_000_000; i++)
        {
            numbers.Add(random.Next(1, 100));
        }
        Numbers = numbers;
    }

    private void SortListOfNumbers()
    {
        Numbers.Sort();
    }

    private void GeneratePrimeNumbers()
    {
        var timer = System.Diagnostics.Stopwatch.StartNew();
        var primeNumbers = new List<int>();
        for (int i = 2; i < 1_000_000; i++)
        {
            if (IsPrime(i))
            {
                primeNumbers.Add(i);
            }
        }
        timer.Stop();
        Time = (int)timer.ElapsedMilliseconds;
    }

    private bool IsPrime(int number)
    {
        if (number < 2)
        {
            return false;
        }
        for (int i = 2; i <= Math.Sqrt(number); i++)
        {
            if (number % i == 0)
            {
                return false;
            }
        }
        return true;
    }
}

<PageTitle>Home</PageTitle>
<ion-list>
    <ion-item>
        <ion-button @onclick=Calculate>Generate Multiplication Tables</ion-button>
    </ion-item>
    <ion-item>
        <ion-button @onclick=GenerateAndSortNumbers>Generate and Sort Numbers</ion-button>
    </ion-item>
    <ion-item>
        <ion-button @onclick=GeneratePrimeNumbers>Generate Prime Numbers</ion-button>
    </ion-item>
    @if (Time > 0)
    {
        <ion-item>
            <ion-label>Did that in @Time ms</ion-label>
        </ion-item>
    }
</ion-list>